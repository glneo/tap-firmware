/*
 * This demo depicts a beating heart.
 *
 * Copyright (C) 2016 TheLab.ms
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 */

#include "main.h"

#define	HOLD_FRAMES	7

#define FRAMECOUNT 8

unsigned char frames[5][NUM_ROWS][NUM_COLS] =
{
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 1, 0, 0, 0, 0,
		0, 0, 1, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 1, 1, 0, 0,
		0, 0, 0, 1, 1, 1, 0, 0,
		0, 0, 1, 1, 1, 0, 0, 0,
		0, 0, 0, 1, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
	},
	{
		0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 1, 1, 0, 0, 0, 0,
		0, 1, 1, 1, 1, 0, 0, 0,
		0, 0, 1, 1, 1, 1, 0, 0,
		0, 0, 1, 1, 1, 1, 0, 0,
		0, 1, 1, 1, 1, 0, 0, 0,
		0, 0, 1, 1, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0,
	},
	{
		0, 0, 1, 1, 0, 0, 0, 0,
		0, 1, 1, 1, 1, 0, 0, 0,
		0, 1, 1, 1, 1, 1, 0, 0,
		0, 0, 1, 1, 1, 1, 1, 0,
		0, 0, 1, 1, 1, 1, 1, 0,
		0, 1, 1, 1, 1, 1, 0, 0,
		0, 1, 1, 1, 1, 0, 0, 0,
		0, 0, 1, 1, 0, 0, 0, 0,
	},
	{
		0, 0, 1, 1, 1, 0, 0, 0,
		0, 1, 1, 1, 1, 1, 0, 0,
		0, 1, 1, 1, 1, 1, 1, 0,
		0, 0, 1, 1, 1, 1, 1, 1,
		0, 0, 1, 1, 1, 1, 1, 1,
		0, 1, 1, 1, 1, 1, 1, 0,
		0, 1, 1, 1, 1, 1, 0, 0,
		0, 0, 1, 1, 1, 0, 0, 0,
	},
	{
		0, 1, 1, 1, 1, 1, 0, 0,
		1, 1, 1, 1, 1, 1, 1, 0,
		1, 1, 1, 1, 1, 1, 1, 1,
		0, 1, 1, 1, 1, 1, 1, 1,
		0, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 0,
		0, 1, 1, 1, 1, 1, 0, 0,
	}
};

void loop(void)
{
	static int frame = 0, numFrames = 0;
	int row, col;

	// This code is invoked once each time the LEDs are scanned...
	if (numFrames > 0)
	{
		// Hold current image for some frames
		numFrames--;
		return;
	}
	numFrames = HOLD_FRAMES;

	frame = (frame + 1) % FRAMECOUNT;

	static const int f2f[] = { 1, 2, 3, 4, 3, 2, 1, 0 };
    for (row = 0; row < 8; row++)
        for (col = 0; col < 8; col++)
            display_buffer[row][(col * COL_SIZE)] = frames[f2f[frame]][col][row] * FULL_INTENSITY;
}
