/*
 * This demo shows pixels in several sizes
 *
 * Copyright (C) 2016 TheLab.ms
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 */

#include "main.h"

unsigned int hold_frames = 63;

#define MAX_CYCLES 16

unsigned int frame;
unsigned int index;
unsigned int cycle;

bool pattern_buffer[8][8];

void make_pixels(int index)
{
	int mask = 1 << index;
	for (int row = 0; row < 8; row++)
		for (int col = 0; col < 8; col++)
			if ((!(row & mask) && !(col & mask)) ||
			    ( (row & mask) &&  (col & mask)))
				pattern_buffer[row][col] = true;
			else
				pattern_buffer[row][col] = false;
}

// This code is invoked once to initialize the demo...
void setup(void)
{
	index = 3;
	frame = 1;
	cycle = 0;
}

void loop(void)
{
	if (cycle++ == MAX_CYCLES)
	{
		index = (index + 1) % 4;
		make_pixels(index);
		cycle = 0;
	}

	for (int row = 0; row < 8; row++)
		for (int col = 0; col < 8; col++)
		{
			unsigned char value = (pattern_buffer[row][col] ^ frame) ? FULL_INTENSITY : 0;
			display_buffer[row][col][RED] = value;
			display_buffer[row][col][GREEN] = value;
			display_buffer[row][col][BLUE] = value;
		}

	// Toggle frame
	frame ^= 1;
}
