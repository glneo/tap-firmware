/*
 * This demo is Tommy's clock
 *
 * Copyright (C) 2016 TheLab.ms
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 */

#include "main.h"

// Should be tuned to frames/second
unsigned int hold_frames = 5;

int seconds;
int minutes;
int hours;
int pm;

// This code is invoked once to initialize the demo...
void setup(void)
{
	numFrames = 0;
	seconds = 0;
	minutes = 0;
	hours = 0;
	pm = 0;
}

void displaySeconds(int seconds)
{
	// Blink center
	if ((seconds & 1) != 0)
	{
		display_buffer[3][3][RED] = FULL_INTENSITY;
		display_buffer[3][4][RED] = FULL_INTENSITY;
		display_buffer[4][3][RED] = FULL_INTENSITY;
		display_buffer[4][4][RED] = FULL_INTENSITY;
	}

	if (seconds <= 8)
	{
		for (i = 0; i < seconds; i++)
			display_buffer[i][7][GREEN] = FULL_INTENSITY;
	}
	else if (seconds <= 15)
	{
		for (i = 0; i < 8; i++)
			display_buffer[i][7][GREEN] = FULL_INTENSITY;
		for (i = 0; i < seconds - 7; i++)
			display_buffer[7][(7 - i)][GREEN] = FULL_INTENSITY;
	}
	else if (seconds <= 23)
	{
		for (i = 0; i < 8; i++)
			display_buffer[i][7][GREEN] = FULL_INTENSITY;
		for (i = 1; i < 8; i++)
			display_buffer[7][(7 - i)][GREEN] = FULL_INTENSITY;
		for (i = 0; i < seconds - 15; i++)
			display_buffer[i][7][RED] = FULL_INTENSITY;
	}
	else if (seconds <= 30)
	{
		for (i = 0; i < 8; i++)
		{
			display_buffer[i][7][RED] = FULL_INTENSITY;
			display_buffer[i][7][GREEN] = FULL_INTENSITY;
		}
		for (i = 1; i < 8; i++)
			display_buffer[7][(7 - i)][GREEN] = FULL_INTENSITY;
		for (i = 0; i < seconds - 23; i++)
			display_buffer[7][(7 - i)][RED] = FULL_INTENSITY;
	}
	else if (seconds <= 38)
	{
		for (i = 0; i < 8; i++)
			display_buffer[i][7][RED] = FULL_INTENSITY;
		for (i = seconds - 30; i < 8; i++)
			display_buffer[i][7][GREEN] = FULL_INTENSITY;
		for (i = 1; i < 8; i++)
		{
			display_buffer[7][(7 - i)][RED] = FULL_INTENSITY;
			display_buffer[7][(7 - i)][GREEN] = FULL_INTENSITY;
		}
	}
	else if (seconds <= 45)
	{
		for (i = 0; i < 8; i++)
			display_buffer[i][7][RED] = FULL_INTENSITY;
		for (i = 1; i < 8; i++)
			display_buffer[7][(7 - i)][RED] = FULL_INTENSITY;
		for (i = 0; i <= 45 - seconds; i++)
			display_buffer[7][i][GREEN] = FULL_INTENSITY;
	}
	else if (seconds <= 53)
	{
		for (i = seconds - 45; i < 8; i++)
			display_buffer[i][7][RED] = FULL_INTENSITY;
		for (i = 1; i < 8; i++)
			display_buffer[7][(7 - i)][RED] = FULL_INTENSITY;
	}
	else
	{
		for (i = 0; i <= 60 - seconds; i++)
			display_buffer[7][i][RED] = FULL_INTENSITY;
	}
}

void displayHours(int hours)
{
	int x1, y1, x2, y2;

	switch (hours)
	{
	case 0:
		x1 = 0; y1 = 2;
		x2 = 0; y2 = 4;
		break;
	case 1:
		x1 = 0; y1 = 4;
		x2 = 0; y2 = 6;
		break;
	case 2:
		x1 = 0; y1 = 6;
		x2 = 2; y2 = 6;
		break;
	case 3:
		x1 = 2; y1 = 6;
		x2 = 4; y2 = 6;
		break;
	case 4:
		x1 = 4; y1 = 4;
		x2 = 6; y2 = 6;
		break;
	case 5:
		x1 = 6; y1 = 6;
		x2 = 6; y2 = 4;
		break;
	case 6:
		x1 = 6; y1 = 4;
		x2 = 6; y2 = 2;
		break;
	case 7:
		x1 = 6; y1 = 2;
		x2 = 6; y2 = 0;
		break;
	case 8:
		x1 = 6; y1 = 0;
		x2 = 4; y2 = 0;
		break;
	case 9:
		x1 = 4; y1 = 0;
		x2 = 2; y2 = 0;
		break;
	case 10:
		x1 = 2; y1 = 0;
		x2 = 0; y2 = 0;
		break;
	case 11:
		x1 = 0; y1 = 0;
		x2 = 0; y2 = 2;
		break;
	}

	display_buffer[x1][y1][RED] = FULL_INTENSITY;
	display_buffer[x2][y2][RED] = FULL_INTENSITY;
	if (pm)
	{
		display_buffer[x1][y1][GREEN] = FULL_INTENSITY;
		display_buffer[x2][y2][GREEN] = FULL_INTENSITY;
	}
}

// This code is invoked once each time the LEDs are scanned...
void loop(void)
{
	int i;

	seconds++;
	if (seconds > 59)
	{
		seconds = 0;
		hours++;
		if (hours > 11)
		{
			hours = 0;
			if (pm == 0)
				pm = 1;
			else
				pm = 0;
		}
	}

	// Clear the display
	memset(display_buffer, 0, sizeof(display_buffer));

	displaySeconds(seconds);
	displayHours(hours);
}

